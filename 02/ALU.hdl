// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
    Mux16(a=x, b=false, sel=zx, out=xnew1);
    Mux16(a=y, b=false, sel=zy, out=ynew1);

    Not16(in=xnew1, out=xneg);
    Not16(in=ynew1, out=yneg);
    Mux16(a=xnew1, b=xneg, sel=nx, out=xnew);
    Mux16(a=ynew1, b=yneg, sel=ny, out=ynew);

    Mux16(a=false, b=ynew, sel=f, out=o1); /* 16bit 0 if f=0, y if f=1 */
    Add16(a=xnew, b=o1, out=addxy);
    And16(a=xnew, b=ynew, out=andxy);
    Mux16(a=andxy, b=addxy, sel=f, out=fxy);

    Not16(in=fxy, out=nfxy);

    Mux16(a=fxy, b=nfxy, sel=no, out=out, out[15]=ng, out[0..7]=msb, out[8..15]=lsb);
    Or8Way(in=msb, out=zr1);
    Or8Way(in=lsb, out=zr2);
    Or(a=zr1, b=zr2, out=zr3);
    Not(in=zr3, out=zr);
}
